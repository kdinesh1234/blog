                 
                                   WHAT IS HTTP?
     
           * HTTP is based on the client/server model. client server model can be explained as Two
       computers,client (Reciever of seervice) and server (preoviderof service) that are communicating
       VIA request and responses.

           * A simple and Abstract Example would be a RESTURANT GUEST AND AWAITER. THE GUEST (CLIENT)
       asks (SENDS REQUEST) WAITER (SERVER) for a meal, then the waiter GETS the meal from the restarunt 
       chef ( YOUR APPLICATION LOGIC)and brings the meal to the guest.


                                   WHAT IS HTTP/2?


     MAIN GOALS OF DEVELOPING HTTP/2 WAS:

          * PROTOCOL NEGOTITATION MECHANISM -PROTOCOL ELECTING,EG.HTTP/1.1,HTTP/2 OR OTHER.
          * HIGH-LEVEL COMPATIBILITY WITH HTTP/1.1-METHODS,STATUS CODES,URIS AND HEADER FIELDS.
          * PAGE LOAD SPEED IMPROVEMENTS TROUGH:
          * COMPRESSION OF REQUEST HEADERS
          * BINARY PROTOCOL
          * HTTP/2 SERVER PUSH
          * REQUEST MULTIPLEXINGOVER A SINGLE TCP CONNECTION
          * REQUEST PIPELINING
          * HOL BLOCKING (HEAD-OF-LINE)-PACKAGE BLOCKING


                                       HEADER COMPRESSION


               * HTTP/2 COMPRESS A LARGE NUMBER OF REDUNDANT HEADER FRAMES. IT USES THE HPACK SPECIFICATION
        AS A SIMPLE AND SECURE APPROACH TO HEADER COMPRESSION.BOTH CLIENTAND SERVER MAINTAIN A LIST OF
        HEADERS USED IN PREVIOUS CLIENT-SERVER REQUEST.

               * HPACK COMPRESSESTHE INDIVIDUAL VALUE OF EACH HEADER BEFORE IT IS TRANSFEREDTO THE SERVER
        WHICH THEN LOKS UP THE ENCODED INFORMATION IN A LIST OF PREVIOUSLY TRANSFERED HEADER VALUES TO
        RECONSTRUCT THE FULL HEADER INFORMATION.


                                       BINARY PROTOCOL

  
             * THE LATEST HTTP VERSION HAS ENVOLVED SIGNIFICANTLY IN TERMS OF CAPABILITIES AND ATTRIBUTES
       SUCH AS TRANSFORMING FROM A TEXT PROTOCOL TO A BINARY PROTOCOL HTTP1.X USED TO PROCESS TEXT COMMANDS 
       TO COMPLETE REQUEST-RESPONSECYCLES. HTTP/2 WILL USE BINARY COMMANDS (IN IS AND OS) TO EXECUTE THE
       SAME TASKS.  THIS ATTRIBUTES EASES COMPLICATIONS WITH FRAMINGAND SIMPLIFIES IMPLEMENTATION OF THE
       COMMANDS THAT WERE CONFUSINGLY INTERMIXED DUE TO COMMANDS CONTAINING TEXT AND OPTIONAL SPACES.



                                       HTTP/2 SERVER PUSH


             * THIS CAPABILITY ALLOWS THE SERVER TO SEND ADDITIONAL CACHEABLE INFOPRMATION TO THE CLIENT
       THAT ISN'T REQUESTED BUT IS ANTICIPATED IN FUTURE REQUESTS. FOR EXAMPLE, IF THE CLIENT REQUESTS
       FOR THE RESOURCE X AND ITIS UNDERSTOOD THAT THE RESOURCE Y IS REFERENCED WITH THE REQUESTED FILE,
       THE SERVER CAN CHOOSE TO PUSH Y ALONG WITH X INSTEAD OF WAITING FOR AN APPROPRIATECLIENT.


                                            DATA


              *WHAT WE HAVE HERE IS A SIMPLE PAGE WITH 100 IMAGES OF CHECKS WHICH WILL BE USE TO 
         DEMONSTRATE HTTP/1.1 AND HTPP/2.
              * FOR HTTP/1.1:
              * NUMBER OF REQUEST: 102,LOAD TIME 12.97S,PROTOCOL "HTTP/1.1"
              * FOR HTTP/2:
              * NUMBER OF REQUEST: 102,LOAD TIME 11.19S,PROTOCOL :"H2" (HTTP/2)










